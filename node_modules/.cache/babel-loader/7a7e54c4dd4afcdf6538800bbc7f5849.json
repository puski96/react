{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\StatisztikaComponent.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FajtaService from \"../service/FajtaService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StatisztikaComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fajtak: [],\n      counted: [],\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    FajtaService.getFajtak().then(res => {\n      this.setState({\n        fajtak: res.data\n      });\n\n      for (let i = 0; i <= this.state.fajtak.length; i++) {\n        axios.get(\"http://localhost:8090/api/kisallat/counter\", {\n          params: {\n            id: i\n          }\n        }).then(response => {\n          this.setState({\n            counted: response.data\n          });\n          console.log(this.state.counted);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        console.log(this.state.counted);\n      }\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed. Error: \", ex);\n    });\n    this.setState({\n      loaded: true\n    });\n    console.log(this.state.counted);\n  }\n\n  render() {\n    console.log(this.state.fajtak.length);\n    console.log(this.state.counted.length);\n    if (this.state.counted.length != undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rasa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Numar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);else return null;\n  }\n\n}\n\nexport default StatisztikaComponent;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/StatisztikaComponent.jsx"],"names":["React","Component","axios","FajtaService","StatisztikaComponent","constructor","props","state","fajtak","counted","loaded","componentDidMount","getFajtak","then","res","setState","data","i","length","get","params","id","response","console","log","catch","error","ex","render","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,YAAY,CAACS,SAAb,GACGC,IADH,CACSC,GAAD,IAAS;AACb,WAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEM,GAAG,CAACE;AAAd,OAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKV,KAAL,CAAWC,MAAX,CAAkBU,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClDf,QAAAA,KAAK,CACFiB,GADH,CACO,4CADP,EACqD;AACjDC,UAAAA,MAAM,EAAE;AACNC,YAAAA,EAAE,EAAEJ;AADE;AADyC,SADrD,EAMGJ,IANH,CAMSS,QAAD,IAAc;AAClB,eAAKP,QAAL,CAAc;AAAEN,YAAAA,OAAO,EAAEa,QAAQ,CAACN;AAApB,WAAd;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,OAAvB;AACD,SATH,EAUGgB,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,SAZH;AAaAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,OAAvB;AACD;AACF,KAnBH,EAoBGgB,KApBH,CAoBS,UAAUE,EAAV,EAAc;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDG,EAAhD;AACD,KAtBH;AAuBA,SAAKZ,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAE;AAAV,KAAd;AAEAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,OAAvB;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,MAAX,CAAkBU,MAA9B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,OAAX,CAAmBS,MAA/B;AAEA,QAAI,KAAKX,KAAL,CAAWE,OAAX,CAAmBS,MAAnB,IAA6BW,SAAjC,EACE,oBACE;AAAA,6BACE;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAiCQ,GAjCR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CADF,KAgDK,OAAO,IAAP;AACN;;AA3F0C;;AA8F7C,eAAezB,oBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport FajtaService from \"../service/FajtaService.js\";\r\n\r\nclass StatisztikaComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fajtak: [],\r\n      counted: [],\r\n      loaded: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    FajtaService.getFajtak()\r\n      .then((res) => {\r\n        this.setState({ fajtak: res.data });\r\n        for (let i = 0; i <= this.state.fajtak.length; i++) {\r\n          axios\r\n            .get(\"http://localhost:8090/api/kisallat/counter\", {\r\n              params: {\r\n                id: i,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              this.setState({ counted: response.data });\r\n              console.log(this.state.counted);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n          console.log(this.state.counted);\r\n        }\r\n      })\r\n      .catch(function (ex) {\r\n        console.log(\"Response parsing failed. Error: \", ex);\r\n      });\r\n    this.setState({ loaded: true });\r\n\r\n    console.log(this.state.counted);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.fajtak.length);\r\n    console.log(this.state.counted.length);\r\n\r\n    if (this.state.counted.length != undefined)\r\n      return (\r\n        <div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Rasa</th>\r\n                <th>Numar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {/* {this.state.fajtak.map((fajta) =>\r\n                    \r\n                  )} */}\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n              {/* {this.state.fajtak.forEach((elem) => {\r\n                // axios\r\n                //   .get(\"http://localhost:8090/api/kisallat/counter\", {\r\n                //     params: {\r\n                //       id: elem.id,\r\n                //     },\r\n                //   })\r\n                //   .then((response) => {\r\n                //     if (response.data != 0) {\r\n                <tr key={elem.id}>\r\n                  <td>{elem.id}</td>\r\n                  {/* <td>{response.data}</td> */}\r\n              {/* </tr>;\r\n                // }\r\n                //   })\r\n                //   .catch(function (error) {\r\n                //     console.log(error);\r\n                //   });\r\n              })} */}\r\n              {/* {this.state.counted.map((count) => (\r\n              <tr key={count.fajta}>\r\n                <td>{count.fajta}</td>\r\n                <td>{count.number}</td>\r\n              </tr>\r\n            ))} */}{\" \"}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\n\r\nexport default StatisztikaComponent;\r\n"]},"metadata":{},"sourceType":"module"}