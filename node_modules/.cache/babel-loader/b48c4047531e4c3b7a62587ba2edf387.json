{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\RegisterComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TenyesztokService from \"../service/TenyesztokService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Register = e => {\n      e.preventDefault();\n      let user = {\n        nev: this.state.nev,\n        cim: this.state.cim,\n        tel: this.state.tel,\n        email: this.state.email,\n        biro: false,\n        egyesuletId: 3,\n        password: this.state.password === this.state.passwordR ? this.state.password : alert(\"Parolă greșită\"),\n        helyseg: this.state.helyseg\n      };\n      console.log(\"userTulaj => \" + JSON.stringify(user));\n      TenyesztokService.addTenyeszto(user).then(res => {});\n      let reg = {\n        email: this.state.email,\n        password: this.state.password === this.state.passwordR ? this.state.password : alert(\"Parolă greșită\")\n      };\n      console.log(\"userReg => \" + JSON.stringify(reg));\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', 'http://localhost:8080/user');\n      xhr.send(JSON.stringify({\n        email: this.state.email,\n        passwordHash: this.state.password\n      }));\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      axios.post(\"localhost:8090/api/auth/registration\", reg);\n    };\n\n    this.changeNevHandler = event => {\n      this.setState({\n        nev: event.target.value\n      });\n    };\n\n    this.changeCimHandler = event => {\n      this.setState({\n        cim: event.target.value\n      });\n    };\n\n    this.changeTelHandler = event => {\n      this.setState({\n        tel: event.target.value\n      });\n    };\n\n    this.changeHelysegHandler = event => {\n      this.setState({\n        helyseg: event.target.value\n      });\n    };\n\n    this.changeEmailHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.changePasswordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.changePasswordRHandler = event => {\n      this.setState({\n        passwordR: event.target.value\n      });\n    };\n\n    this.state = {\n      nev: null,\n      cim: null,\n      tel: null,\n      email: null,\n      helyseg: 1,\n      password: null,\n      passwordR: null,\n      helysegek: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8090/api/helysegek`).then(res => {\n      this.setState({\n        helysegek: res.data\n      });\n      console.log(res.data);\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed. Error: \", ex);\n    });\n  }\n\n  render() {\n    if (this.state.helysegek.length != 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"regTitle\",\n        children: \"\\xCEnregistrare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"reginput\",\n        placeholder: \"Numele \\u0219i prenumele\",\n        onChange: this.changeNevHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"reginput\",\n        placeholder: \"Adresa\",\n        onChange: this.changeCimHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"reginput\",\n        placeholder: \"Nr telefon\",\n        onChange: this.changeTelHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"reginput\",\n        onChange: this.changeHelysegHandler,\n        children: this.state.helysegek.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.helysegNev,\n          children: option.helysegNev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"reginput\",\n        placeholder: \"Email\",\n        onChange: this.changeEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"reginput\",\n        placeholder: \"Password\",\n        onChange: this.changePasswordRHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"reginput\",\n        placeholder: \"Password\",\n        onChange: this.changePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.Register,\n        className: \"regBtn\",\n        children: \"\\xCEnregistrare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this);\n    return null;\n  }\n\n}\n\nexport default RegisterComponent;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/RegisterComponent.jsx"],"names":["React","Component","Link","axios","TenyesztokService","RegisterComponent","constructor","props","Register","e","preventDefault","user","nev","state","cim","tel","email","biro","egyesuletId","password","passwordR","alert","helyseg","console","log","JSON","stringify","addTenyeszto","then","res","reg","xhr","XMLHttpRequest","open","send","passwordHash","setRequestHeader","post","changeNevHandler","event","setState","target","value","changeCimHandler","changeTelHandler","changeHelysegHandler","changeEmailHandler","changePasswordHandler","changePasswordRHandler","helysegek","componentDidMount","get","data","catch","ex","render","length","map","option","helysegNev"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport TenyesztokService from \"../service/TenyesztokService\";\r\n\r\nclass RegisterComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nev: null,\r\n      cim: null,\r\n      tel: null,\r\n      email: null,\r\n      helyseg: 1,\r\n      password: null,\r\n      passwordR: null,\r\n      helysegek: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`http://localhost:8090/api/helysegek`)\r\n      .then((res) => {\r\n        this.setState({ helysegek: res.data });\r\n        console.log(res.data);\r\n      })\r\n      .catch(function (ex) {\r\n        console.log(\"Response parsing failed. Error: \", ex);\r\n      });\r\n  }\r\n  Register = (e) => {\r\n    e.preventDefault();\r\n    let user = {\r\n      nev: this.state.nev,\r\n      cim: this.state.cim,\r\n      tel: this.state.tel,\r\n      email: this.state.email,\r\n      biro: false,\r\n      egyesuletId: 3,\r\n      password:\r\n        this.state.password === this.state.passwordR\r\n          ? this.state.password\r\n          : alert(\"Parolă greșită\"),\r\n      helyseg: this.state.helyseg,\r\n    };\r\n    console.log(\"userTulaj => \" + JSON.stringify(user));\r\n\r\n    TenyesztokService.addTenyeszto(user).then((res) => {});\r\n    let reg = {\r\n      email: this.state.email,\r\n      password:\r\n        this.state.password === this.state.passwordR\r\n          ? this.state.password\r\n          : alert(\"Parolă greșită\"),\r\n    };\r\n    console.log(\"userReg => \" + JSON.stringify(reg));\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('POST', 'http://localhost:8080/user');\r\n    xhr.send(JSON.stringify({ email: this.state.email,passwordHash:this.state.password }));\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    axios.post(\"localhost:8090/api/auth/registration\", reg);\r\n  };\r\n  changeNevHandler = (event) => {\r\n    this.setState({ nev: event.target.value });\r\n  };\r\n\r\n  changeCimHandler = (event) => {\r\n    this.setState({ cim: event.target.value });\r\n  };\r\n\r\n  changeTelHandler = (event) => {\r\n    this.setState({ tel: event.target.value });\r\n  };\r\n\r\n  changeHelysegHandler = (event) => {\r\n    this.setState({ helyseg: event.target.value });\r\n  };\r\n\r\n  changeEmailHandler = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  changePasswordHandler = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  changePasswordRHandler = (event) => {\r\n    this.setState({ passwordR: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.helysegek.length != 0)\r\n      return (\r\n        <div>\r\n          <h2 className=\"regTitle\">Înregistrare</h2>\r\n          <input\r\n            className=\"reginput\"\r\n            placeholder=\"Numele și prenumele\"\r\n            onChange={this.changeNevHandler}\r\n          ></input>\r\n          <input\r\n            className=\"reginput\"\r\n            placeholder=\"Adresa\"\r\n            onChange={this.changeCimHandler}\r\n          ></input>\r\n          <input\r\n            className=\"reginput\"\r\n            placeholder=\"Nr telefon\"\r\n            onChange={this.changeTelHandler}\r\n          ></input>\r\n          <select className=\"reginput\" onChange={this.changeHelysegHandler}>\r\n            {this.state.helysegek.map((option) => (\r\n              <option value={option.helysegNev}>{option.helysegNev}</option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"email\"\r\n            className=\"reginput\"\r\n            placeholder=\"Email\"\r\n            onChange={this.changeEmailHandler}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            className=\"reginput\"\r\n            placeholder=\"Password\"\r\n            onChange={this.changePasswordRHandler}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            className=\"reginput\"\r\n            placeholder=\"Password\"\r\n            onChange={this.changePasswordHandler}\r\n          ></input>\r\n          <button onClick={this.Register} className=\"regBtn\">\r\n            Înregistrare\r\n          </button>\r\n        </div>\r\n      );\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default RegisterComponent;\r\n"]},"metadata":{},"sourceType":"module"}