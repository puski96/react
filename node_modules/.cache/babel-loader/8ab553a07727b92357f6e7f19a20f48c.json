{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapView.jsx\";\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport React, { PureComponent } from \"react\";\nimport jel from \"../img/images.png\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\"\n});\nconst response = null;\n\nclass MapView extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        width: \"100vw\",\n        height: \"100vh\",\n        latitude: 42.430472,\n        longitude: -123.334102,\n        zoom: 16\n      },\n      userLocation: {},\n      helysegek: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      response = await axios.get(`http://localhost:8090/api/helysegek`), this.setState({\n        helysegek: res.response\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let setUserLocation = {\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      };\n      let newViewport = {\n        height: \"100vh\",\n        width: \"100vw\",\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        zoom: 10\n      };\n      this.setState({\n        viewport: newViewport,\n        userLocation: setUserLocation\n      });\n    });\n  }\n\n  componentWillMount() {}\n\n  render() {\n    const {\n      helysegek\n    } = this.state.helysegek; // const helyseg = helysegek.map(helyseg => <Planet name={planet.name} type={planet.type} />);\n\n    return /*#__PURE__*/_jsxDEV(ReactMapGL, { ...this.state.viewport,\n      mapStyle: \"mapbox://styles/mapbox/outdoors-v11\",\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapboxApiAccessToken: \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\",\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: this.state.helysegek.latitude,\n        longitude: this.state.helysegek.longitude,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"marker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapView;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapView.jsx"],"names":["ReactMapboxGl","Layer","Feature","React","PureComponent","jel","ReactMapGL","Marker","axios","Map","accessToken","response","MapView","constructor","props","state","viewport","width","height","latitude","longitude","zoom","userLocation","helysegek","componentDidMount","get","setState","res","err","console","log","navigator","geolocation","getCurrentPosition","position","setUserLocation","lat","coords","long","newViewport","componentWillMount","render"],"mappings":"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","sourcesContent":["import ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport React, { PureComponent } from \"react\";\r\nimport jel from \"../img/images.png\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport axios from \"axios\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\",\r\n});\r\nconst response = null;\r\nclass MapView extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        latitude: 42.430472,\r\n        longitude: -123.334102,\r\n        zoom: 16,\r\n      },\r\n      userLocation: {},\r\n      helysegek: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      (response = await axios.get(`http://localhost:8090/api/helysegek`)),\r\n        this.setState({ helysegek: res.response });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      let setUserLocation = {\r\n        lat: position.coords.latitude,\r\n        long: position.coords.longitude,\r\n      };\r\n      let newViewport = {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n        zoom: 10,\r\n      };\r\n      this.setState({\r\n        viewport: newViewport,\r\n        userLocation: setUserLocation,\r\n      });\r\n    });\r\n  }\r\n  componentWillMount() {}\r\n  render() {\r\n    const { helysegek } = this.state.helysegek;\r\n\r\n    // const helyseg = helysegek.map(helyseg => <Planet name={planet.name} type={planet.type} />);\r\n\r\n    return (\r\n      <ReactMapGL\r\n        {...this.state.viewport}\r\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\r\n        onViewportChange={(viewport) => this.setState({ viewport })}\r\n        mapboxApiAccessToken=\"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\"\r\n      >\r\n        <Marker\r\n          latitude={this.state.helysegek.latitude}\r\n          longitude={this.state.helysegek.longitude}\r\n        >\r\n          <img className=\"marker\" />\r\n        </Marker>\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}