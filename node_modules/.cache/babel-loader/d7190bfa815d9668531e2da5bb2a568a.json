{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapView.jsx\";\nimport React, { PureComponent } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport Geocoder from \"react-mapbox-gl-geocoder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyle = {\n  width: \"100%\",\n  height: 600\n};\nconst mapboxApiKey = \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\";\nconst params = {\n  country: \"ca\"\n};\n\nconst CustomMarker = ({\n  index,\n  marker\n}) => {\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    longitude: marker.longitude,\n    latitude: marker.latitude,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomMarker;\n\nclass MapView extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelected = (viewport, item) => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.state = {\n      viewport: {\n        latitude: 45.50884,\n        longitude: -73.58781,\n        zoom: 15\n      }\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let newViewport = {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        zoom: 12\n      };\n      this.setState({\n        viewport: newViewport\n      });\n    });\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Geocoder, {\n        mapboxApiAccessToken: mapboxApiKey,\n        onSelected: this.onSelected,\n        viewport: viewport,\n        hideOnSelect: true,\n        value: \"\",\n        queryParams: params\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, {\n        mapboxApiAccessToken: mapboxApiKey,\n        mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n        ...viewport,\n        ...mapStyle,\n        onViewportChange: viewport => this.setState({\n          viewport\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomMarker\");","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapView.jsx"],"names":["React","PureComponent","ReactMapGL","Geocoder","mapStyle","width","height","mapboxApiKey","params","country","CustomMarker","index","marker","longitude","latitude","MapView","constructor","props","onSelected","viewport","item","setState","state","zoom","componentDidMount","navigator","geolocation","getCurrentPosition","position","newViewport","coords","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAjB;AAKA,MAAMC,YAAY,GAChB,2FADF;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AADI,CAAf;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACxC,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAEA,MAAM,CAACC,SADpB;AAEE,IAAA,QAAQ,EAAED,MAAM,CAACE,QAFnB;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA,+BAAM;AAAA,oBAAIH,KAAK,GAAG;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAMD,Y;;AAWN,MAAMK,OAAN,SAAsBd,aAAtB,CAAoC;AAClCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,UAtBmB,GAsBN,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC/B,WAAKC,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGD,KA1BkB;;AAEjB,SAAKG,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAAE;AACRL,QAAAA,QAAQ,EAAE,QADF;AAERD,QAAAA,SAAS,EAAE,CAAC,QAFJ;AAGRU,QAAAA,IAAI,EAAE;AAHE;AADC,KAAb;AAOD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,UAAIC,WAAW,GAAG;AAChBf,QAAAA,QAAQ,EAAEc,QAAQ,CAACE,MAAT,CAAgBhB,QADV;AAEhBD,QAAAA,SAAS,EAAEe,QAAQ,CAACE,MAAT,CAAgBjB,SAFX;AAGhBU,QAAAA,IAAI,EAAE;AAHU,OAAlB;AAKA,WAAKF,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAEU;AADE,OAAd;AAGD,KATD;AAUD;;AAODE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKG,KAA1B;AACA,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,oBAAoB,EAAEf,YADxB;AAEE,QAAA,UAAU,EAAE,KAAKW,UAFnB;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,YAAY,EAAE,IAJhB;AAKE,QAAA,KAAK,EAAC,EALR;AAME,QAAA,WAAW,EAAEX;AANf;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,UAAD;AACE,QAAA,oBAAoB,EAAED,YADxB;AAEE,QAAA,QAAQ,EAAC,oCAFX;AAAA,WAGMY,QAHN;AAAA,WAIMf,QAJN;AAKE,QAAA,gBAAgB,EAAGe,QAAD,IAAc,KAAKE,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AALlC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAlDiC;;AAqDpC,eAAeJ,OAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Geocoder from \"react-mapbox-gl-geocoder\";\r\n\r\nconst mapStyle = {\r\n  width: \"100%\",\r\n  height: 600,\r\n};\r\n\r\nconst mapboxApiKey =\r\n  \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\";\r\n\r\nconst params = {\r\n  country: \"ca\",\r\n};\r\nconst CustomMarker = ({index, marker}) => {\r\n  return (\r\n    <Marker\r\n      longitude={marker.longitude}\r\n      latitude={marker.latitude}>\r\n      <div className=\"marker\">\r\n        <span><b>{index + 1}</b></span>\r\n      </div>\r\n    </Marker>\r\n  )\r\n};\r\nclass MapView extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        latitude: 45.50884,\r\n        longitude: -73.58781,\r\n        zoom: 15,\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      let newViewport = {\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n        zoom: 12,\r\n      };\r\n      this.setState({\r\n        viewport: newViewport,\r\n      });\r\n    });\r\n  }\r\n  onSelected = (viewport, item) => {\r\n    this.setState({\r\n      viewport,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { viewport } = this.state;\r\n    return (\r\n      <div>\r\n        <Geocoder\r\n          mapboxApiAccessToken={mapboxApiKey}\r\n          onSelected={this.onSelected}\r\n          viewport={viewport}\r\n          hideOnSelect={true}\r\n          value=\"\"\r\n          queryParams={params}\r\n        />\r\n        <ReactMapGL\r\n          mapboxApiAccessToken={mapboxApiKey}\r\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n          {...viewport}\r\n          {...mapStyle}\r\n          onViewportChange={(viewport) => this.setState({ viewport })}\r\n        ></ReactMapGL>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}