{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapView.jsx\";\nimport React, { PureComponent } from \"react\";\nimport Geocoder from \"react-mapbox-gl-geocoder\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyle = {\n  width: \"100%\",\n  height: 600\n};\nconst mapboxApiKey = \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\";\nconst params = {\n  country: \"ca\"\n};\n\nconst CustomMarker = ({\n  index,\n  marker\n}) => {\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    longitude: marker.longitude,\n    latitude: marker.latitude,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomMarker;\n\nclass MapView extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelected = (viewport, item) => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.state = {\n      viewport: {\n        latitude: 45.50884,\n        longitude: -73.58781,\n        zoom: 15\n      },\n      tempMarker: null,\n      markers: []\n    };\n  } // componentDidMount() {\n  //   navigator.geolocation.getCurrentPosition((position) => {\n  //     let newViewport = {\n  //       latitude: position.coords.latitude,\n  //       longitude: position.coords.longitude,\n  //       zoom: 12,\n  //     };\n  //     this.setState({\n  //       viewport: newViewport,\n  //     });\n  //   });\n  // }\n\n\n  render() {\n    const {\n      pinSize\n    } = this.props;\n    const propsData = {\n      latitude: this.props.latitude,\n      longitude: this.props.longitude\n    };\n    const mapConfig = merge(this.state.viewport, propsData);\n    return /*#__PURE__*/_jsxDEV(MapGL, {\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      onViewportChange: viewport => this.setState({ ...viewport,\n        width: \"100%\"\n      }),\n      ...mapConfig,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: this.props.latitude,\n        longitude: this.props.longitude,\n        children: /*#__PURE__*/_jsxDEV(Pin, {\n          size: pinSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomMarker\");","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapView.jsx"],"names":["React","PureComponent","Geocoder","ReactMapGL","Marker","mapStyle","width","height","mapboxApiKey","params","country","CustomMarker","index","marker","longitude","latitude","MapView","constructor","props","onSelected","viewport","item","setState","state","zoom","tempMarker","markers","render","pinSize","propsData","mapConfig","merge","process","env","REACT_APP_MAPBOX_TOKEN"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAjB;AAKA,MAAMC,YAAY,GAChB,2FADF;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AADI,CAAf;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AAC1C,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,MAAM,CAACC,SAA1B;AAAqC,IAAA,QAAQ,EAAED,MAAM,CAACE,QAAtD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA,+BACE;AAAA,oBAAIH,KAAK,GAAG;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAMD,Y;;AAWN,MAAMK,OAAN,SAAsBf,aAAtB,CAAoC;AAClCgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,UAxBmB,GAwBN,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC/B,WAAKC,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGD,KA5BkB;;AAEjB,SAAKG,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAAE;AACRL,QAAAA,QAAQ,EAAE,QADF;AAERD,QAAAA,SAAS,EAAE,CAAC,QAFJ;AAGRU,QAAAA,IAAI,EAAE;AAHE,OADC;AAMXC,MAAAA,UAAU,EAAE,IAND;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASD,GAZiC,CAalC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAoBAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKV,KAAzB;AACA,UAAMW,SAAS,GAAG;AAAEd,MAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWH,QAAvB;AAAiCD,MAAAA,SAAS,EAAE,KAAKI,KAAL,CAAWJ;AAAvD,KAAlB;AACA,UAAMgB,SAAS,GAAGC,KAAK,CAAC,KAAKR,KAAL,CAAWH,QAAZ,EAAsBS,SAAtB,CAAvB;AAEA,wBACE,QAAC,KAAD;AACE,MAAA,oBAAoB,EAAEG,OAAO,CAACC,GAAR,CAAYC,sBADpC;AAEE,MAAA,gBAAgB,EAAEd,QAAQ,IAAI,KAAKE,QAAL,CAAc,EAAE,GAAGF,QAAL;AAAed,QAAAA,KAAK,EAAE;AAAtB,OAAd,CAFhC;AAAA,SAGMwB,SAHN;AAAA,6BAKE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWH,QAA7B;AAAuC,QAAA,SAAS,EAAE,KAAKG,KAAL,CAAWJ,SAA7D;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAEc;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5DiC;;AA+DpC,eAAeZ,OAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport Geocoder from \"react-mapbox-gl-geocoder\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\n\r\nconst mapStyle = {\r\n  width: \"100%\",\r\n  height: 600,\r\n};\r\n\r\nconst mapboxApiKey =\r\n  \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\";\r\n\r\nconst params = {\r\n  country: \"ca\",\r\n};\r\nconst CustomMarker = ({ index, marker }) => {\r\n  return (\r\n    <Marker longitude={marker.longitude} latitude={marker.latitude}>\r\n      <div className=\"marker\">\r\n        <span>\r\n          <b>{index + 1}</b>\r\n        </span>\r\n      </div>\r\n    </Marker>\r\n  );\r\n};\r\nclass MapView extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        latitude: 45.50884,\r\n        longitude: -73.58781,\r\n        zoom: 15,\r\n      },\r\n      tempMarker: null,\r\n      markers: [],\r\n    };\r\n  }\r\n  // componentDidMount() {\r\n  //   navigator.geolocation.getCurrentPosition((position) => {\r\n  //     let newViewport = {\r\n  //       latitude: position.coords.latitude,\r\n  //       longitude: position.coords.longitude,\r\n  //       zoom: 12,\r\n  //     };\r\n  //     this.setState({\r\n  //       viewport: newViewport,\r\n  //     });\r\n  //   });\r\n  // }\r\n  onSelected = (viewport, item) => {\r\n    this.setState({\r\n      viewport,\r\n    });\r\n  };\r\n  // add = () => {\r\n  //   var { tempMarker } = this.state;\r\n\r\n  //   this.setState((prevState) => ({\r\n  //     markers: [...prevState.markers, tempMarker],\r\n  //     tempMarker: null,\r\n  //   }));\r\n  // };state = {\r\n    viewport: {\r\n      latitude: 53.795231,\r\n      longitude: -1.54511300000001,\r\n      zoom: 15\r\n    }\r\n\r\n  render() {\r\n    const { pinSize } = this.props;\r\n    const propsData = { latitude: this.props.latitude, longitude: this.props.longitude };\r\n    const mapConfig = merge(this.state.viewport, propsData);\r\n\r\n    return (\r\n      <MapGL\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={viewport => this.setState({ ...viewport, width: \"100%\" })}\r\n        {...mapConfig}\r\n      >\r\n        <Marker latitude={this.props.latitude} longitude={this.props.longitude}>\r\n          <Pin size={pinSize} />\r\n        </Marker>\r\n      </MapGL>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}