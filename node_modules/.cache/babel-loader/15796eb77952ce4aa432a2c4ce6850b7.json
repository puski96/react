{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\StatisztikaComponent.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FajtaService from \"../service/FajtaService.js\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StatisztikaComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fajtak: [],\n      counted: [],\n      loaded: false,\n      options: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      series: [{\n        name: \"series-1\",\n        data: [3]\n      }],\n      options1: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      series1: [{\n        name: \"series-1\",\n        data: [3]\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8090/api/fajta/counter\").then(response => {\n      this.setState({\n        counted: response.data\n      });\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < this.state.counted.length; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        series: chartSeries\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counter\").then(response => {\n      this.setState({\n        counted: response.data\n      });\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < this.state.counted.length; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        series: chartSeries\n      });\n      this.setState({\n        series1: chartSeries\n      });\n    });\n    console.log(this.state.options);\n  }\n\n  render() {\n    console.log(this.state.fajtak.length);\n    console.log(this.state.counted.length);\n    if (this.state.counted.length != undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"keresekTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rasa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Numar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.counted.map(fajta => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: fajta.fajta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: fajta.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.options1,\n          series: this.state.series1,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);else return null;\n  }\n\n}\n\nexport default StatisztikaComponent;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/StatisztikaComponent.jsx"],"names":["React","Component","axios","FajtaService","Chart","StatisztikaComponent","constructor","props","state","fajtak","counted","loaded","options","chart","id","xaxis","categories","series","name","data","options1","series1","componentDidMount","get","then","response","setState","chartData","chartCategories","chartSeries","i","length","push","count","fajta","catch","error","console","log","render","undefined","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport FajtaService from \"../service/FajtaService.js\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass StatisztikaComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fajtak: [],\r\n      counted: [],\r\n      loaded: false,\r\n      options: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n\r\n      options1: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      series1: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counter\")\r\n      .then((response) => {\r\n        this.setState({\r\n          counted: response.data,\r\n        });\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < this.state.counted.length; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          series: chartSeries,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      axios\r\n      .get(\"http://localhost:8090/api/fajta/counter\")\r\n      .then((response) => {\r\n        this.setState({\r\n          counted: response.data,\r\n        });\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < this.state.counted.length; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          series: chartSeries,\r\n        });\r\n        this.setState({\r\n          series1: chartSeries,\r\n        });\r\n        \r\n      })\r\n\r\n    console.log(this.state.options);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.fajtak.length);\r\n    console.log(this.state.counted.length);\r\n\r\n    if (this.state.counted.length != undefined)\r\n      return (\r\n        <div>\r\n          <table className=\"keresekTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Rasa</th>\r\n                <th>Numar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.counted.map((fajta) => (\r\n                <tr>\r\n                  <td>{fajta.fajta}</td>\r\n                  <td>{fajta.count}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div id=\"chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n            <Chart\r\n              options={this.state.options1}\r\n              series={this.state.series1}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\n\r\nexport default StatisztikaComponent;\r\n"]},"metadata":{},"sourceType":"module"}