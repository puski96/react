{"ast":null,"code":"import axios from \"axios\";\nconst keresek = \"http://localhost:8090/api/keres\";\nlet axiosConfig = {\n  headers: {\n    \"Content-Type\": \"application/json;charset=UTF-8\"\n  }\n};\n\nclass KeresService {\n  getKeresek() {\n    return axios.get(keresek, axiosConfig);\n  }\n\n  getKeresById(keresId) {\n    return axios.get(keresek + \"/\" + keresId, axiosConfig);\n  }\n\n  addKeres(keres) {\n    return axios.post(keresek + \"/save\", keres, axiosConfig);\n  }\n\n  updateKeres(keres) {\n    return axios.post(keresek + \"/update\", keres, axiosConfig);\n  }\n\n  deleteKeres(keresId) {\n    return axios.delete(keresek + \"/\" + keresId, axiosConfig);\n  }\n\n}\n\nexport default new KeresService();","map":{"version":3,"sources":["E:/probaReact/projekt/src/service/KeresService.js"],"names":["axios","keresek","axiosConfig","headers","KeresService","getKeresek","get","getKeresById","keresId","addKeres","keres","post","updateKeres","deleteKeres","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;AAEA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADO,CAAlB;;AAMA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,UAAU,GAAG;AACX,WAAOL,KAAK,CAACM,GAAN,CAAUL,OAAV,EAAmBC,WAAnB,CAAP;AACD;;AAEDK,EAAAA,YAAY,CAACC,OAAD,EAAU;AACpB,WAAOR,KAAK,CAACM,GAAN,CAAUL,OAAO,GAAG,GAAV,GAAgBO,OAA1B,EAAmCN,WAAnC,CAAP;AACD;;AACDO,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAOV,KAAK,CAACW,IAAN,CAAWV,OAAO,GAAG,OAArB,EAA8BS,KAA9B,EAAqCR,WAArC,CAAP;AACD;;AACDU,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,WAAOV,KAAK,CAACW,IAAN,CAAWV,OAAO,GAAG,SAArB,EAAgCS,KAAhC,EAAuCR,WAAvC,CAAP;AACD;;AACDW,EAAAA,WAAW,CAACL,OAAD,EAAU;AACnB,WAAOR,KAAK,CAACc,MAAN,CAAab,OAAO,GAAG,GAAV,GAAgBO,OAA7B,EAAsCN,WAAtC,CAAP;AACD;;AAhBgB;;AAmBnB,eAAe,IAAIE,YAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst keresek = \"http://localhost:8090/api/keres\";\r\n\r\nlet axiosConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass KeresService {\r\n  getKeresek() {\r\n    return axios.get(keresek, axiosConfig);\r\n  }\r\n\r\n  getKeresById(keresId) {\r\n    return axios.get(keresek + \"/\" + keresId, axiosConfig);\r\n  }\r\n  addKeres(keres) {\r\n    return axios.post(keresek + \"/save\", keres, axiosConfig);\r\n  }\r\n  updateKeres(keres) {\r\n    return axios.post(keresek + \"/update\", keres, axiosConfig);\r\n  }\r\n  deleteKeres(keresId) {\r\n    return axios.delete(keresek + \"/\" + keresId, axiosConfig);\r\n  }\r\n}\r\n\r\nexport default new KeresService();\r\n"]},"metadata":{},"sourceType":"module"}