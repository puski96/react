{"ast":null,"code":"import axios from \"axios\";\nconst keresek = \"http://localhost:8090/api/keres\";\nlet axiosConfig = {\n  headers: {\n    \"Content-Type\": \"application/json;charset=UTF-8\",\n    Authorization: localStorage.getItem(\"user\") ? \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).access_token : \"\"\n  }\n};\n\nclass KeresService {\n  getKeresek() {\n    return axios.get(keresek, axiosConfig);\n  }\n\n  getKereseim(id) {\n    return axios.get(keresek + \"/kereseim/\" + id, axiosConfig);\n  }\n\n  getKeresById(keresId) {\n    return axios.get(keresek + \"/\" + keresId, axiosConfig);\n  }\n\n  addKeres(keres) {\n    return axios.post(keresek + \"/save\", keres, axiosConfig);\n  }\n\n  updateKeres(keres) {\n    return axios.post(keresek + \"/update\", keres, axiosConfig);\n  }\n\n  deleteKeres(keresId) {\n    return axios.delete(keresek + \"/\" + keresId, axiosConfig);\n  }\n\n}\n\nexport default new KeresService();","map":{"version":3,"sources":["E:/probaReact/projekt/src/service/KeresService.js"],"names":["axios","keresek","axiosConfig","headers","Authorization","localStorage","getItem","JSON","parse","access_token","KeresService","getKeresek","get","getKereseim","id","getKeresById","keresId","addKeres","keres","post","updateKeres","deleteKeres","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;AAEA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,gCADT;AAEPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,IACX,YAAYC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCG,YAD1C,GAEX;AAJG;AADO,CAAlB;;AASA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,UAAU,GAAG;AACX,WAAOX,KAAK,CAACY,GAAN,CAAUX,OAAV,EAAmBC,WAAnB,CAAP;AACD;;AACDW,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,WAAOd,KAAK,CAACY,GAAN,CAAUX,OAAO,GAAG,YAAV,GAAyBa,EAAnC,EAAuCZ,WAAvC,CAAP;AACD;;AACDa,EAAAA,YAAY,CAACC,OAAD,EAAU;AACpB,WAAOhB,KAAK,CAACY,GAAN,CAAUX,OAAO,GAAG,GAAV,GAAgBe,OAA1B,EAAmCd,WAAnC,CAAP;AACD;;AACDe,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAOlB,KAAK,CAACmB,IAAN,CAAWlB,OAAO,GAAG,OAArB,EAA8BiB,KAA9B,EAAqChB,WAArC,CAAP;AACD;;AACDkB,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,WAAOlB,KAAK,CAACmB,IAAN,CAAWlB,OAAO,GAAG,SAArB,EAAgCiB,KAAhC,EAAuChB,WAAvC,CAAP;AACD;;AACDmB,EAAAA,WAAW,CAACL,OAAD,EAAU;AACnB,WAAOhB,KAAK,CAACsB,MAAN,CAAarB,OAAO,GAAG,GAAV,GAAgBe,OAA7B,EAAsCd,WAAtC,CAAP;AACD;;AAlBgB;;AAqBnB,eAAe,IAAIQ,YAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst keresek = \"http://localhost:8090/api/keres\";\r\n\r\nlet axiosConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    Authorization: localStorage.getItem(\"user\")\r\n      ? \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).access_token\r\n      : \"\",\r\n  },\r\n};\r\n\r\nclass KeresService {\r\n  getKeresek() {\r\n    return axios.get(keresek, axiosConfig);\r\n  }\r\n  getKereseim(id) {\r\n    return axios.get(keresek + \"/kereseim/\" + id, axiosConfig);\r\n  }\r\n  getKeresById(keresId) {\r\n    return axios.get(keresek + \"/\" + keresId, axiosConfig);\r\n  }\r\n  addKeres(keres) {\r\n    return axios.post(keresek + \"/save\", keres, axiosConfig);\r\n  }\r\n  updateKeres(keres) {\r\n    return axios.post(keresek + \"/update\", keres, axiosConfig);\r\n  }\r\n  deleteKeres(keresId) {\r\n    return axios.delete(keresek + \"/\" + keresId, axiosConfig);\r\n  }\r\n}\r\n\r\nexport default new KeresService();\r\n"]},"metadata":{},"sourceType":"module"}