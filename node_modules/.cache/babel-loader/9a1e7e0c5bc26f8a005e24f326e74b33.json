{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\StatisztikaComponent.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FajtaService from \"../service/FajtaService.js\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StatisztikaComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fajtak: [],\n      countedI: [],\n      countedG: [],\n      countedT: [],\n      loaded: false,\n      optionsI: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      seriesI: [{\n        name: \"series-1\",\n        data: [3]\n      }],\n      optionsG: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      seriesG: [{\n        name: \"series-1\",\n        data: [3]\n      }],\n      optionsT: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      seriesT: [{\n        name: \"series-1\",\n        data: [3]\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8090/api/fajta/counterI\").then(response => {\n      this.setState({\n        countedI: response.data\n      });\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < this.state.countedI.length; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesI: chartSeries\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counterG\").then(response => {\n      this.setState({\n        countedG: response.data\n      });\n      console.log(this.state);\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < this.state.countedG.length; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesG: chartSeries\n      });\n      console.log(this.state.seriesG);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counterT\").then(response => {\n      this.setState({\n        countedT: response.data\n      });\n      console.log(response);\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < 5; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesT: chartSeries\n      });\n      console.log(this.state.seriesT);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counterT\").then(response => {\n      this.setState({\n        countedT: response.data\n      });\n      console.log(response);\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = this.state.countedT.length; i < this.state.countedG.length - 5; i--) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesL: chartSeries\n      });\n      console.log(this.state.seriesT);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(this.state.options);\n  }\n\n  render() {\n    console.log(this.state.fajtak.length);\n    console.log(this.state.countedI.length);\n    if (this.state.countedI.length != undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsI,\n          series: this.state.seriesI,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsG,\n          series: this.state.seriesG,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsT,\n          series: this.state.seriesT,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this);else return null;\n  }\n\n}\n\nexport default StatisztikaComponent;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/StatisztikaComponent.jsx"],"names":["React","Component","axios","FajtaService","Chart","StatisztikaComponent","constructor","props","state","fajtak","countedI","countedG","countedT","loaded","optionsI","chart","id","xaxis","categories","seriesI","name","data","optionsG","seriesG","optionsT","seriesT","componentDidMount","get","then","response","setState","chartData","chartCategories","chartSeries","i","length","push","count","fajta","catch","error","console","log","seriesL","options","render","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport FajtaService from \"../service/FajtaService.js\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass StatisztikaComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fajtak: [],\r\n      countedI: [],\r\n      countedG: [],\r\n      countedT: [],\r\n      loaded: false,\r\n      optionsI: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      seriesI: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n      optionsG: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      seriesG: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n      optionsT: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      seriesT: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterI\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedI: response.data,\r\n        });\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < this.state.countedI.length; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          seriesI: chartSeries,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterG\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedG: response.data,\r\n        });\r\n        console.log(this.state);\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < this.state.countedG.length; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          seriesG: chartSeries,\r\n        });\r\n        console.log(this.state.seriesG);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterT\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedT: response.data,\r\n        });\r\n        console.log(response);\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < 5; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          seriesT: chartSeries,\r\n        });\r\n        console.log(this.state.seriesT);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterT\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedT: response.data,\r\n        });\r\n        console.log(response);\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (\r\n          let i = this.state.countedT.length;\r\n          i < this.state.countedG.length - 5;\r\n          i--\r\n        ) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          seriesL: chartSeries,\r\n        });\r\n        console.log(this.state.seriesT);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    console.log(this.state.options);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.fajtak.length);\r\n    console.log(this.state.countedI.length);\r\n\r\n    if (this.state.countedI.length != undefined)\r\n      return (\r\n        <div>\r\n          <div id=\"chart\">\r\n            <Chart\r\n              options={this.state.optionsI}\r\n              series={this.state.seriesI}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n            <Chart\r\n              options={this.state.optionsG}\r\n              series={this.state.seriesG}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n            <Chart\r\n              options={this.state.optionsT}\r\n              series={this.state.seriesT}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\n\r\nexport default StatisztikaComponent;\r\n"]},"metadata":{},"sourceType":"module"}