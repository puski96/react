{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport mnDistricts from \"./data/mn/mn-districts.geojson\";\nimport mapboxgl from 'mapbox-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Districts(props) {\n  _s();\n\n  //Assign the Mapbox token from the environment variable set in .env\n  mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n  const mapContainer = useRef(null);\n  const [long, setLong] = useState(-94.503809);\n  const [lat, setLat] = useState(46.443226);\n  const [zoom, setZoom] = useState(4.5);\n  const [hoveredDistrict, _setHoveredDistrict] = useState(null);\n  const hoveredDistrictRef = useRef(hoveredDistrict);\n\n  const setHoveredDistrict = data => {\n    hoveredDistrictRef.current = data;\n\n    _setHoveredDistrict(data);\n  };\n\n  useEffect(() => {\n    let map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: [long, lat],\n      zoom: zoom\n    }); // Add zoom and rotation controls to the map.\n\n    map.addControl(new mapboxgl.NavigationControl());\n    map.once(\"load\", function () {\n      map.addSource('district-source', {\n        'type': 'geojson',\n        'data': mnDistricts\n      });\n      map.addLayer({\n        'id': 'district-layer',\n        'type': 'fill',\n        'source': 'district-source',\n        'layout': {},\n        'paint': {\n          'fill-color': ['match', ['get', 'CD116FP'], '01', '#5AA5D7', '02', '#02735E', '03', '#00E0EF', '04', '#84D0D9', '05', '#202359', '06', '#CE7529', '07', '#00AE6C', '08', '#0056A3',\n          /* other */\n          '#ffffff'],\n          'fill-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], .8, 0.5]\n        }\n      });\n      map.on('mousemove', 'district-layer', function (e) {\n        if (e.features.length > 0) {\n          if (hoveredDistrictRef.current && hoveredDistrictRef.current > -1) {\n            map.setFeatureState({\n              source: 'district-source',\n              id: hoveredDistrictRef.current\n            }, {\n              hover: false\n            });\n          }\n\n          let _hoveredDistrict = e.features[0].id;\n          map.setFeatureState({\n            source: 'district-source',\n            id: _hoveredDistrict\n          }, {\n            hover: true\n          });\n          setHoveredDistrict(_hoveredDistrict);\n        }\n      }); // When the mouse leaves the state-fill layer, update the feature state of the\n      // previously hovered feature.\n\n      map.on('mouseleave', 'district-layer', function () {\n        if (hoveredDistrictRef.current) {\n          map.setFeatureState({\n            source: 'district-source',\n            id: hoveredDistrictRef.current\n          }, {\n            hover: false\n          });\n        }\n\n        setHoveredDistrict(null);\n      });\n      map.on('move', () => {\n        const {\n          lng,\n          lat\n        } = map.getCenter();\n        setLong(lng.toFixed(4));\n        setLat(lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"district-map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [\"Current hovered district: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: hoveredDistrict ? hoveredDistrict : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"districtDetailMap\",\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        ref: mapContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Districts, \"n74bw/APXm08zMF7+gQOz88WsjI=\");\n\n_c = Districts;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Districts\");","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapComponent.jsx"],"names":["React","useState","useEffect","useRef","mnDistricts","mapboxgl","Districts","props","accessToken","process","env","REACT_APP_MAPBOX_KEY","mapContainer","long","setLong","lat","setLat","zoom","setZoom","hoveredDistrict","_setHoveredDistrict","hoveredDistrictRef","setHoveredDistrict","data","current","map","Map","container","style","center","addControl","NavigationControl","once","addSource","addLayer","on","e","features","length","setFeatureState","source","id","hover","_hoveredDistrict","lng","getCenter","toFixed","getZoom","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport mnDistricts from \"./data/mn/mn-districts.geojson\";\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nfunction Districts(props) {\r\n\r\n    //Assign the Mapbox token from the environment variable set in .env\r\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\r\n\r\n    const mapContainer = useRef(null);\r\n\r\n    const [long, setLong] = useState(-94.503809);\r\n    const [lat, setLat] = useState(46.443226);\r\n    const [zoom, setZoom] = useState(4.5);\r\n\r\n    const [hoveredDistrict, _setHoveredDistrict] = useState(null);\r\n    const hoveredDistrictRef = useRef(hoveredDistrict);\r\n\r\n    const setHoveredDistrict = data => {\r\n        hoveredDistrictRef.current = data;\r\n        _setHoveredDistrict(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: \"mapbox://styles/mapbox/light-v10\",\r\n            center: [long, lat],\r\n            zoom: zoom\r\n        });\r\n\r\n\r\n        // Add zoom and rotation controls to the map.\r\n        map.addControl(new mapboxgl.NavigationControl());\r\n\r\n        map.once(\"load\", function () {\r\n\r\n            map.addSource('district-source', {\r\n                'type': 'geojson',\r\n                'data': mnDistricts\r\n            });\r\n\r\n            map.addLayer({\r\n                'id': 'district-layer',\r\n                'type': 'fill',\r\n                'source': 'district-source',\r\n                'layout': {},\r\n                'paint': {\r\n                    'fill-color': [\r\n                        'match',\r\n                        ['get', 'CD116FP'],\r\n                        '01',\r\n                        '#5AA5D7',\r\n                        '02',\r\n                        '#02735E',\r\n                        '03',\r\n                        '#00E0EF',\r\n                        '04',\r\n                        '#84D0D9',\r\n                        '05',\r\n                        '#202359',\r\n                        '06',\r\n                        '#CE7529',\r\n                        '07',\r\n                        '#00AE6C',\r\n                        '08',\r\n                        '#0056A3',\r\n                        /* other */ '#ffffff'\r\n                    ],\r\n                    'fill-opacity': [\r\n                        'case',\r\n                        ['boolean', ['feature-state', 'hover'], false],\r\n                        .8,\r\n                        0.5\r\n                    ]\r\n                }\r\n            });\r\n\r\n            map.on('mousemove', 'district-layer', function (e) {\r\n                if (e.features.length > 0) {\r\n                    if (hoveredDistrictRef.current && hoveredDistrictRef.current > -1) {\r\n\r\n                        map.setFeatureState(\r\n                            { source: 'district-source', id: hoveredDistrictRef.current },\r\n                            { hover: false }\r\n                        );\r\n                    }\r\n\r\n                    let _hoveredDistrict = e.features[0].id;\r\n\r\n                    map.setFeatureState(\r\n                        { source: 'district-source', id: _hoveredDistrict },\r\n                        { hover: true }\r\n                    );\r\n\r\n                    setHoveredDistrict(_hoveredDistrict);\r\n                }\r\n\r\n            });\r\n\r\n            // When the mouse leaves the state-fill layer, update the feature state of the\r\n            // previously hovered feature.\r\n            map.on('mouseleave', 'district-layer', function () {\r\n                if (hoveredDistrictRef.current) {\r\n                    map.setFeatureState(\r\n                        { source: 'district-source', id: hoveredDistrictRef.current },\r\n                        { hover: false }\r\n                    );\r\n                }\r\n                setHoveredDistrict(null);\r\n            });\r\n\r\n            map.on('move', () => {\r\n                const { lng, lat } = map.getCenter();\r\n\r\n                setLong(lng.toFixed(4));\r\n                setLat(lat.toFixed(4));\r\n                setZoom(map.getZoom().toFixed(2));\r\n            });\r\n\r\n        });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"district-map-wrapper\">\r\n\r\n            <div className=\"info\">\r\n                Current hovered district: <strong>{hoveredDistrict ? hoveredDistrict : \"\"}</strong>\r\n            </div>\r\n            <div id=\"districtDetailMap\" className=\"map\">\r\n                <div style={{ height: \"100%\" }} ref={mapContainer}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Map"]},"metadata":{},"sourceType":"module"}