{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\StatisztikaComponent.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FajtaService from \"../service/FajtaService.js\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StatisztikaComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fajtak: [],\n      countedI: [],\n      countedG: [],\n      countedT: [],\n      countedL: [],\n      loaded: false,\n      optionsI: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      seriesI: [{\n        name: \"series-1\",\n        data: [3]\n      }],\n      optionsL: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      seriesL: [{\n        name: \"series-1\",\n        data: [3]\n      }],\n      optionsG: {\n        series: [44, 55, 41, 17, 15],\n        chart: {\n          width: 380,\n          type: \"donut\"\n        },\n        labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"]\n      },\n      optionsT: {\n        chart: {\n          id: \"apexchart-example\"\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      seriesT: [{\n        name: \"series-1\",\n        data: [3]\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8090/api/fajta/counterI\").then(response => {\n      this.setState({\n        countedI: response.data\n      });\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < this.state.countedI.length; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesI: chartSeries\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counterG\").then(response => {\n      this.setState({\n        countedG: response.data\n      });\n      console.log(this.state);\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < this.state.countedG.length; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seroiesG: chartSeries\n      });\n      console.log(this.state.seriesG);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counterT\").then(response => {\n      this.setState({\n        countedT: response.data\n      });\n      console.log(response);\n      let chartData = [];\n      let chartCategories = [];\n      let chartSeries = [];\n\n      for (let i = 0; i < 5; i++) {\n        chartData.push(response.data[i].count);\n        chartCategories.push(response.data[i].fajta);\n        chartSeries.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesT: chartSeries\n      });\n      console.log(this.state.seriesT);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:8090/api/fajta/counterT\").then(response => {\n      this.setState({\n        countedT: response.data\n      });\n      console.log(response);\n      let chartDataL = [];\n      let chartCategoriesL = [];\n      let chartSeriesL = [];\n\n      for (let i = this.state.countedT.length - 7; i < this.state.countedT.length; i++) {\n        console.log(this.state.countedT.length);\n        chartDataL.push(response.data[i].count);\n        chartCategoriesL.push(response.data[i].fajta);\n        chartSeriesL.push({\n          data: [response.data[i].count],\n          name: response.data[i].fajta\n        });\n      }\n\n      this.setState({\n        seriesL: chartSeriesL\n      });\n      console.log(this.state.seriesL);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(this.state.options);\n  }\n\n  render() {\n    console.log(this.state.fajtak.length);\n    console.log(this.state.countedI.length);\n    if (this.state.countedI.length != undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsI,\n          series: this.state.seriesI,\n          type: \"donut\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsG,\n          series: this.state.seriesG,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsT,\n          series: this.state.seriesT,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.optionsL,\n          series: this.state.seriesL,\n          type: \"bar\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this);else return null;\n  }\n\n}\n\nexport default StatisztikaComponent;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/StatisztikaComponent.jsx"],"names":["React","Component","axios","FajtaService","Chart","StatisztikaComponent","constructor","props","state","fajtak","countedI","countedG","countedT","countedL","loaded","optionsI","chart","id","xaxis","categories","seriesI","name","data","optionsL","seriesL","optionsG","series","width","type","labels","optionsT","seriesT","componentDidMount","get","then","response","setState","chartData","chartCategories","chartSeries","i","length","push","count","fajta","catch","error","console","log","seroiesG","seriesG","chartDataL","chartCategoriesL","chartSeriesL","options","render","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport FajtaService from \"../service/FajtaService.js\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass StatisztikaComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fajtak: [],\r\n      countedI: [],\r\n      countedG: [],\r\n      countedT: [],\r\n      countedL: [],\r\n      loaded: false,\r\n      optionsI: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      seriesI: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n      optionsL: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      seriesL: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n      optionsG: {\r\n        series: [44, 55, 41, 17, 15],\r\n        chart: {\r\n          width: 380,\r\n          type: \"donut\",\r\n        },\r\n        labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"],\r\n      },\r\n      optionsT: {\r\n        chart: {\r\n          id: \"apexchart-example\",\r\n        },\r\n        xaxis: {\r\n          categories: [\"\"],\r\n        },\r\n      },\r\n      seriesT: [\r\n        {\r\n          name: \"series-1\",\r\n          data: [3],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterI\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedI: response.data,\r\n        });\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < this.state.countedI.length; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          seriesI: chartSeries,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterG\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedG: response.data,\r\n        });\r\n        console.log(this.state);\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < this.state.countedG.length; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n        this.setState({\r\n          seroiesG: chartSeries,\r\n        });\r\n        console.log(this.state.seriesG);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterT\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedT: response.data,\r\n        });\r\n        console.log(response);\r\n        let chartData = [];\r\n        let chartCategories = [];\r\n        let chartSeries = [];\r\n        for (let i = 0; i < 5; i++) {\r\n          chartData.push(response.data[i].count);\r\n          chartCategories.push(response.data[i].fajta);\r\n          chartSeries.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          seriesT: chartSeries,\r\n        });\r\n        console.log(this.state.seriesT);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"http://localhost:8090/api/fajta/counterT\")\r\n      .then((response) => {\r\n        this.setState({\r\n          countedT: response.data,\r\n        });\r\n        console.log(response);\r\n        let chartDataL = [];\r\n        let chartCategoriesL = [];\r\n        let chartSeriesL = [];\r\n        for (\r\n          let i = this.state.countedT.length - 7;\r\n          i < this.state.countedT.length;\r\n          i++\r\n        ) {\r\n          console.log(this.state.countedT.length);\r\n          chartDataL.push(response.data[i].count);\r\n          chartCategoriesL.push(response.data[i].fajta);\r\n          chartSeriesL.push({\r\n            data: [response.data[i].count],\r\n            name: response.data[i].fajta,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          seriesL: chartSeriesL,\r\n        });\r\n        console.log(this.state.seriesL);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    console.log(this.state.options);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.fajtak.length);\r\n    console.log(this.state.countedI.length);\r\n\r\n    if (this.state.countedI.length != undefined)\r\n      return (\r\n        <div>\r\n          <div id=\"chart\">\r\n            <Chart\r\n              options={this.state.optionsI}\r\n              series={this.state.seriesI}\r\n              type=\"donut\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n            <Chart\r\n              options={this.state.optionsG}\r\n              series={this.state.seriesG}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n            <Chart\r\n              options={this.state.optionsT}\r\n              series={this.state.seriesT}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n            <Chart\r\n              options={this.state.optionsL}\r\n              series={this.state.seriesL}\r\n              type=\"bar\"\r\n              width={500}\r\n              height={320}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\n\r\nexport default StatisztikaComponent;\r\n"]},"metadata":{},"sourceType":"module"}