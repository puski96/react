{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapView.jsx\";\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport React, { PureComponent } from \"react\";\nimport jel from \"../img/images.png\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport axios from \"axios\";\nimport HelysegekService from \"../service/HelysegekService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\"\n});\nconst response = null;\n\nclass MapView extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        width: \"100vw\",\n        height: \"100vh\",\n        latitude: 42.430472,\n        longitude: -123.334102,\n        zoom: 16\n      },\n      userLocation: {},\n      helysegek: []\n    };\n  }\n\n  componentDidMount() {\n    HelysegekService.getHelysegek().then(res => {\n      this.setState({\n        helysegek: res.data\n      });\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed. Error: \", ex);\n    });\n    navigator.geolocation.getCurrentPosition(position => {\n      let setUserLocation = {\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      };\n      let newViewport = {\n        height: \"100vh\",\n        width: \"100vw\",\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        zoom: 10\n      };\n      this.setState({\n        viewport: newViewport,\n        userLocation: setUserLocation\n      });\n    });\n  }\n\n  componentWillMount() {}\n\n  render() {\n    const {\n      helysegek\n    } = this.state.helysegek; // const helyseg = helysegek.map(helyseg => <Planet name={planet.name} type={planet.type} />);\n\n    if (this.state.helysegek.latitude != null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ReactMapGL, { ...this.state.viewport,\n        mapStyle: \"mapbox://styles/mapbox/outdoors-v11\",\n        onViewportChange: viewport => this.setState({\n          viewport\n        }),\n        mapboxApiAccessToken: \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\",\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: this.state.helysegek.latitude,\n          longitude: this.state.helysegek.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default MapView;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapView.jsx"],"names":["ReactMapboxGl","Layer","Feature","React","PureComponent","jel","ReactMapGL","Marker","axios","HelysegekService","Map","accessToken","response","MapView","constructor","props","state","viewport","width","height","latitude","longitude","zoom","userLocation","helysegek","componentDidMount","getHelysegek","then","res","setState","data","catch","ex","console","log","navigator","geolocation","getCurrentPosition","position","setUserLocation","lat","coords","long","newViewport","componentWillMount","render"],"mappings":"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","sourcesContent":["import ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport React, { PureComponent } from \"react\";\r\nimport jel from \"../img/images.png\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport axios from \"axios\";\r\nimport HelysegekService from \"../service/HelysegekService\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\",\r\n});\r\nconst response = null;\r\nclass MapView extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        latitude: 42.430472,\r\n        longitude: -123.334102,\r\n        zoom: 16,\r\n      },\r\n      userLocation: {},\r\n      helysegek: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    HelysegekService.getHelysegek()\r\n      .then((res) => {\r\n        this.setState({ helysegek: res.data });\r\n      })\r\n      .catch(function (ex) {\r\n        console.log(\"Response parsing failed. Error: \", ex);\r\n      });\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      let setUserLocation = {\r\n        lat: position.coords.latitude,\r\n        long: position.coords.longitude,\r\n      };\r\n      let newViewport = {\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n        zoom: 10,\r\n      };\r\n      this.setState({\r\n        viewport: newViewport,\r\n        userLocation: setUserLocation,\r\n      });\r\n    });\r\n  }\r\n  componentWillMount() {}\r\n  render() {\r\n    const { helysegek } = this.state.helysegek;\r\n\r\n    // const helyseg = helysegek.map(helyseg => <Planet name={planet.name} type={planet.type} />);\r\n\r\n    if (this.state.helysegek.latitude != null) {\r\n      return <div>LOADING</div>;\r\n    } else {\r\n      return (\r\n        <ReactMapGL\r\n          {...this.state.viewport}\r\n          mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\r\n          onViewportChange={(viewport) => this.setState({ viewport })}\r\n          mapboxApiAccessToken=\"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\"\r\n        >\r\n          <Marker\r\n            latitude={this.state.helysegek.latitude}\r\n            longitude={this.state.helysegek.longitude}\r\n          >\r\n            <img className=\"marker\" />\r\n          </Marker>\r\n        </ReactMapGL>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}