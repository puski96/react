{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\EmailSenderComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst nodemailer = require(\"nodemailer\");\n\nclass EmailSenderComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    // let testAccount = await nodemailer.createTestAccount();\n    let email = \"puskasg225@gmail.com\"; // create reusable transporter object using the default SMTP transport\n\n    let transporter = nodemailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 587,\n      secure: false,\n      // true for 465, false for other ports\n      auth: {\n        user: email,\n        // generated ethereal user\n        pass: \"SpringBootTest\" // generated ethereal password\n\n      }\n    });\n    transporter.verify((error, success) => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log('All works fine, congratz!');\n      }\n    }); // send mail with defined transport object\n\n    transporter.sendMail({\n      from: '\"Fred Foo ðŸ‘»\" <puskasg225@gmail.com>',\n      // sender address\n      to: \"puskas.gabika@gmail.com, puskas.angela@gmail.com\",\n      // list of receivers\n      subject: \"Hello âœ”\",\n      // Subject line\n      text: \"Hello world?\",\n      // plain text body\n      html: \"<b>Hello world?</b>\" // html body\n\n    }); // console.log(\"Message sent: %s\", info.messageId);\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n    // Preview only available when sending through an Ethereal account\n    // console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default EmailSenderComponent;","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/EmailSenderComponent.jsx"],"names":["React","Component","nodemailer","require","EmailSenderComponent","constructor","props","state","text","componentDidMount","email","transporter","createTransport","host","port","secure","auth","user","pass","verify","error","success","console","log","sendMail","from","to","subject","html","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA,QAAIC,KAAK,GAAG,sBAAZ,CAJkB,CAKlB;;AACA,QAAIC,WAAW,GAAGT,UAAU,CAACU,eAAX,CAA2B;AAC3CC,MAAAA,IAAI,EAAE,gBADqC;AAE3CC,MAAAA,IAAI,EAAE,GAFqC;AAG3CC,MAAAA,MAAM,EAAE,KAHmC;AAG5B;AACfC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEP,KADF;AACS;AACbQ,QAAAA,IAAI,EAAE,gBAFF,CAEoB;;AAFpB;AAJqC,KAA3B,CAAlB;AASAP,IAAAA,WAAW,CAACQ,MAAZ,CAAmB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC,UAAID,KAAJ,EAAW;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF,KANH,EAfkB,CAsBZ;;AACNZ,IAAAA,WAAW,CAACa,QAAZ,CAAqB;AACnBC,MAAAA,IAAI,EAAE,sCADa;AAC2B;AAC9CC,MAAAA,EAAE,EAAE,kDAFe;AAEqC;AACxDC,MAAAA,OAAO,EAAE,SAHU;AAGC;AACpBnB,MAAAA,IAAI,EAAE,cAJa;AAIG;AACtBoB,MAAAA,IAAI,EAAE,qBALa,CAKU;;AALV,KAArB,EAvBkB,CA+BlB;AACA;AAEA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAjD0C;;AAmD7C,eAAezB,oBAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst nodemailer = require(\"nodemailer\");\r\n\r\nclass EmailSenderComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Generate test SMTP service account from ethereal.email\r\n    // Only needed if you don't have a real mail account for testing\r\n    // let testAccount = await nodemailer.createTestAccount();\r\n    let email = \"puskasg225@gmail.com\";\r\n    // create reusable transporter object using the default SMTP transport\r\n    let transporter = nodemailer.createTransport({\r\n      host: \"smtp.gmail.com\",\r\n      port: 587,\r\n      secure: false, // true for 465, false for other ports\r\n      auth: {\r\n        user: email, // generated ethereal user\r\n        pass: \"SpringBootTest\", // generated ethereal password\r\n      },\r\n    });\r\n    transporter.verify((error, success) => {\r\n        if (error) {\r\n          console.log(error);\r\n        } else {\r\n          console.log('All works fine, congratz!');\r\n        }\r\n      });\r\n          // send mail with defined transport object\r\n    transporter.sendMail({\r\n      from: '\"Fred Foo ðŸ‘»\" <puskasg225@gmail.com>', // sender address\r\n      to: \"puskas.gabika@gmail.com, puskas.angela@gmail.com\", // list of receivers\r\n      subject: \"Hello âœ”\", // Subject line\r\n      text: \"Hello world?\", // plain text body\r\n      html: \"<b>Hello world?</b>\", // html body\r\n    });\r\n\r\n    // console.log(\"Message sent: %s\", info.messageId);\r\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n\r\n    // Preview only available when sending through an Ethereal account\r\n    // console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n  }\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\nexport default EmailSenderComponent;\r\n"]},"metadata":{},"sourceType":"module"}