{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapView.jsx\";\nimport React, { PureComponent } from \"react\";\nimport Geocoder from \"react-mapbox-gl-geocoder\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyle = {\n  width: \"100%\",\n  height: 600\n};\nconst mapboxApiKey = \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\";\nconst params = {\n  country: \"ca\"\n};\n\nconst CustomMarker = ({\n  index,\n  marker\n}) => {\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    longitude: marker.longitude,\n    latitude: marker.latitude,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomMarker;\n\nclass MapView extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelected = (viewport, item) => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.state = {\n      viewport: {\n        latitude: 45.50884,\n        longitude: -73.58781 // zoom: 15,\n\n      },\n      tempMarker: null,\n      markers: []\n    };\n  } // componentDidMount() {\n  //   navigator.geolocation.getCurrentPosition((position) => {\n  //     let newViewport = {\n  //       latitude: position.coords.latitude,\n  //       longitude: position.coords.longitude,\n  //       zoom: 12,\n  //     };\n  //     this.setState({\n  //       viewport: newViewport,\n  //     });\n  //   });\n  // }\n\n\n  // add = () => {\n  //   var { tempMarker } = this.state;\n  //   this.setState((prevState) => ({\n  //     markers: [...prevState.markers, tempMarker],\n  //     tempMarker: null,\n  //   }));\n  // };\n  render() {\n    const {\n      viewport\n    } = this.state;\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-65.017, -16.457],\n      zoom: 5\n    });\n    new mapboxgl.Marker(el).setLngLat(this.state.viewport).addTo(map);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Geocoder, {\n        mapboxApiAccessToken: mapboxApiKey,\n        onSelected: this.onSelected,\n        viewport: viewport,\n        hideOnSelect: true,\n        value: \"\",\n        queryParams: params\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, {\n        mapboxApiAccessToken: mapboxApiKey,\n        mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n        ...viewport,\n        ...mapStyle,\n        onViewportChange: viewport => this.setState({\n          viewport\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          latitude: this.state.viewport.latitude,\n          longitude: this.state.viewport.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), this.state.markers.map((marker, index) => {\n          return /*#__PURE__*/_jsxDEV(CustomMarker, {\n            index: index,\n            marker: marker\n          }, `marker-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomMarker\");","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapView.jsx"],"names":["React","PureComponent","Geocoder","ReactMapGL","Marker","mapStyle","width","height","mapboxApiKey","params","country","CustomMarker","index","marker","longitude","latitude","MapView","constructor","props","onSelected","viewport","item","setState","state","tempMarker","markers","render","map","mapboxgl","Map","container","style","center","zoom","el","setLngLat","addTo"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport Geocoder from \"react-mapbox-gl-geocoder\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\n\r\nconst mapStyle = {\r\n  width: \"100%\",\r\n  height: 600,\r\n};\r\n\r\nconst mapboxApiKey =\r\n  \"pk.eyJ1IjoicHVza2k5NiIsImEiOiJja25hOTJzeTAwenRjMnJ0YXQwMzRpNWV4In0.ElYpo9WdpgCbQsFCYrBsvg\";\r\n\r\nconst params = {\r\n  country: \"ca\",\r\n};\r\nconst CustomMarker = ({ index, marker }) => {\r\n  return (\r\n    <Marker longitude={marker.longitude} latitude={marker.latitude}>\r\n      <div className=\"marker\">\r\n        <span>\r\n          <b>{index + 1}</b>\r\n        </span>\r\n      </div>\r\n    </Marker>\r\n  );\r\n};\r\nclass MapView extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        latitude: 45.50884,\r\n        longitude: -73.58781,\r\n        // zoom: 15,\r\n      },\r\n      tempMarker: null,\r\n      markers: [],\r\n    };\r\n  }\r\n  // componentDidMount() {\r\n  //   navigator.geolocation.getCurrentPosition((position) => {\r\n  //     let newViewport = {\r\n  //       latitude: position.coords.latitude,\r\n  //       longitude: position.coords.longitude,\r\n  //       zoom: 12,\r\n  //     };\r\n  //     this.setState({\r\n  //       viewport: newViewport,\r\n  //     });\r\n  //   });\r\n  // }\r\n  onSelected = (viewport, item) => {\r\n    this.setState({\r\n      viewport,\r\n    });\r\n  };\r\n  // add = () => {\r\n  //   var { tempMarker } = this.state;\r\n\r\n  //   this.setState((prevState) => ({\r\n  //     markers: [...prevState.markers, tempMarker],\r\n  //     tempMarker: null,\r\n  //   }));\r\n  // };\r\n  render() {\r\n    const { viewport } = this.state;\r\n    const map = new mapboxgl.Map({\r\n      container: \"map\",\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [-65.017, -16.457],\r\n      zoom: 5,\r\n    });\r\n    new mapboxgl.Marker(el).setLngLat(this.state.viewport).addTo(map);\r\n    return (\r\n      <div>\r\n        <Geocoder\r\n          mapboxApiAccessToken={mapboxApiKey}\r\n          onSelected={this.onSelected}\r\n          viewport={viewport}\r\n          hideOnSelect={true}\r\n          value=\"\"\r\n          queryParams={params}\r\n        />\r\n        <ReactMapGL\r\n          mapboxApiAccessToken={mapboxApiKey}\r\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n          {...viewport}\r\n          {...mapStyle}\r\n          onViewportChange={(viewport) => this.setState({ viewport })}\r\n        >\r\n          <Marker\r\n            latitude={this.state.viewport.latitude}\r\n            longitude={this.state.viewport.longitude}\r\n          >\r\n            <img className=\"marker\" />\r\n          </Marker>\r\n          {this.state.markers.map((marker, index) => {\r\n            return (\r\n              <CustomMarker\r\n                key={`marker-${index}`}\r\n                index={index}\r\n                marker={marker}\r\n              />\r\n            );\r\n          })}\r\n        </ReactMapGL>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}