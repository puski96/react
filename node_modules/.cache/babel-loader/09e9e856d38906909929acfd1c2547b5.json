{"ast":null,"code":"var _jsxFileName = \"E:\\\\probaReact\\\\projekt\\\\src\\\\components\\\\MapComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; // import mnDistricts from \"./data/mn/mn-districts.geojson\";\n\nimport mapboxgl from \"mapbox-gl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Districts(props) {\n  _s();\n\n  //Assign the Mapbox token from the environment variable set in .env\n  mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n  const mapContainer = useRef(null);\n  const [long, setLong] = useState(-94.503809);\n  const [lat, setLat] = useState(46.443226);\n  const [zoom, setZoom] = useState(4.5);\n  const [hoveredDistrict, _setHoveredDistrict] = useState(null);\n  const hoveredDistrictRef = useRef(hoveredDistrict);\n\n  const setHoveredDistrict = data => {\n    hoveredDistrictRef.current = data;\n\n    _setHoveredDistrict(data);\n  };\n\n  useEffect(() => {\n    let map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: [long, lat],\n      zoom: zoom\n    }); // Add zoom and rotation controls to the map.\n\n    map.addControl(new mapboxgl.NavigationControl());\n    map.once(\"load\", function () {\n      map.addSource(\"district-source\", {\n        type: \"geojson\",\n        data: mnDistricts\n      });\n      map.addLayer({\n        id: \"district-layer\",\n        type: \"fill\",\n        source: \"district-source\",\n        layout: {},\n        paint: {\n          \"fill-color\": [\"match\", [\"get\", \"CD116FP\"], \"01\", \"#5AA5D7\", \"02\", \"#02735E\", \"03\", \"#00E0EF\", \"04\", \"#84D0D9\", \"05\", \"#202359\", \"06\", \"#CE7529\", \"07\", \"#00AE6C\", \"08\", \"#0056A3\",\n          /* other */\n          \"#ffffff\"],\n          \"fill-opacity\": [\"case\", [\"boolean\", [\"feature-state\", \"hover\"], false], 0.8, 0.5]\n        }\n      });\n      map.on(\"mousemove\", \"district-layer\", function (e) {\n        if (e.features.length > 0) {\n          if (hoveredDistrictRef.current && hoveredDistrictRef.current > -1) {\n            map.setFeatureState({\n              source: \"district-source\",\n              id: hoveredDistrictRef.current\n            }, {\n              hover: false\n            });\n          }\n\n          let _hoveredDistrict = e.features[0].id;\n          map.setFeatureState({\n            source: \"district-source\",\n            id: _hoveredDistrict\n          }, {\n            hover: true\n          });\n          setHoveredDistrict(_hoveredDistrict);\n        }\n      }); // When the mouse leaves the state-fill layer, update the feature state of the\n      // previously hovered feature.\n\n      map.on(\"mouseleave\", \"district-layer\", function () {\n        if (hoveredDistrictRef.current) {\n          map.setFeatureState({\n            source: \"district-source\",\n            id: hoveredDistrictRef.current\n          }, {\n            hover: false\n          });\n        }\n\n        setHoveredDistrict(null);\n      });\n      map.on(\"move\", () => {\n        const {\n          lng,\n          lat\n        } = map.getCenter();\n        setLong(lng.toFixed(4));\n        setLat(lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"district-map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [\"Current hovered district:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: hoveredDistrict ? hoveredDistrict : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"districtDetailMap\",\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        ref: mapContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Districts, \"n74bw/APXm08zMF7+gQOz88WsjI=\");\n\n_c = Districts;\nexport default MapComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Districts\");","map":{"version":3,"sources":["E:/probaReact/projekt/src/components/MapComponent.jsx"],"names":["React","useState","useEffect","useRef","mapboxgl","Districts","props","accessToken","process","env","REACT_APP_MAPBOX_KEY","mapContainer","long","setLong","lat","setLat","zoom","setZoom","hoveredDistrict","_setHoveredDistrict","hoveredDistrictRef","setHoveredDistrict","data","current","map","Map","container","style","center","addControl","NavigationControl","once","addSource","type","mnDistricts","addLayer","id","source","layout","paint","on","e","features","length","setFeatureState","hover","_hoveredDistrict","lng","getCenter","toFixed","getZoom","height","MapComponent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n// import mnDistricts from \"./data/mn/mn-districts.geojson\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nfunction Districts(props) {\r\n  //Assign the Mapbox token from the environment variable set in .env\r\n  mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\r\n\r\n  const mapContainer = useRef(null);\r\n\r\n  const [long, setLong] = useState(-94.503809);\r\n  const [lat, setLat] = useState(46.443226);\r\n  const [zoom, setZoom] = useState(4.5);\r\n\r\n  const [hoveredDistrict, _setHoveredDistrict] = useState(null);\r\n  const hoveredDistrictRef = useRef(hoveredDistrict);\r\n\r\n  const setHoveredDistrict = (data) => {\r\n    hoveredDistrictRef.current = data;\r\n    _setHoveredDistrict(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let map = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/light-v10\",\r\n      center: [long, lat],\r\n      zoom: zoom,\r\n    });\r\n\r\n    // Add zoom and rotation controls to the map.\r\n    map.addControl(new mapboxgl.NavigationControl());\r\n\r\n    map.once(\"load\", function () {\r\n      map.addSource(\"district-source\", {\r\n        type: \"geojson\",\r\n        data: mnDistricts,\r\n      });\r\n\r\n      map.addLayer({\r\n        id: \"district-layer\",\r\n        type: \"fill\",\r\n        source: \"district-source\",\r\n        layout: {},\r\n        paint: {\r\n          \"fill-color\": [\r\n            \"match\",\r\n            [\"get\", \"CD116FP\"],\r\n            \"01\",\r\n            \"#5AA5D7\",\r\n            \"02\",\r\n            \"#02735E\",\r\n            \"03\",\r\n            \"#00E0EF\",\r\n            \"04\",\r\n            \"#84D0D9\",\r\n            \"05\",\r\n            \"#202359\",\r\n            \"06\",\r\n            \"#CE7529\",\r\n            \"07\",\r\n            \"#00AE6C\",\r\n            \"08\",\r\n            \"#0056A3\",\r\n            /* other */ \"#ffffff\",\r\n          ],\r\n          \"fill-opacity\": [\r\n            \"case\",\r\n            [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n            0.8,\r\n            0.5,\r\n          ],\r\n        },\r\n      });\r\n\r\n      map.on(\"mousemove\", \"district-layer\", function (e) {\r\n        if (e.features.length > 0) {\r\n          if (hoveredDistrictRef.current && hoveredDistrictRef.current > -1) {\r\n            map.setFeatureState(\r\n              { source: \"district-source\", id: hoveredDistrictRef.current },\r\n              { hover: false }\r\n            );\r\n          }\r\n\r\n          let _hoveredDistrict = e.features[0].id;\r\n\r\n          map.setFeatureState(\r\n            { source: \"district-source\", id: _hoveredDistrict },\r\n            { hover: true }\r\n          );\r\n\r\n          setHoveredDistrict(_hoveredDistrict);\r\n        }\r\n      });\r\n\r\n      // When the mouse leaves the state-fill layer, update the feature state of the\r\n      // previously hovered feature.\r\n      map.on(\"mouseleave\", \"district-layer\", function () {\r\n        if (hoveredDistrictRef.current) {\r\n          map.setFeatureState(\r\n            { source: \"district-source\", id: hoveredDistrictRef.current },\r\n            { hover: false }\r\n          );\r\n        }\r\n        setHoveredDistrict(null);\r\n      });\r\n\r\n      map.on(\"move\", () => {\r\n        const { lng, lat } = map.getCenter();\r\n\r\n        setLong(lng.toFixed(4));\r\n        setLat(lat.toFixed(4));\r\n        setZoom(map.getZoom().toFixed(2));\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"district-map-wrapper\">\r\n      <div className=\"info\">\r\n        Current hovered district:{\" \"}\r\n        <strong>{hoveredDistrict ? hoveredDistrict : \"\"}</strong>\r\n      </div>\r\n      <div id=\"districtDetailMap\" className=\"map\">\r\n        <div style={{ height: \"100%\" }} ref={mapContainer}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MapComponent;\r\n"]},"metadata":{},"sourceType":"module"}